#### 1. Install Required Packages

sudo yum install -y httpd mod_ssl openssl openssl-devel ca-certificates \
php php-cli php-mysqlnd php-gd php-xml php-mbstring php-curl php-zip php-soap

#### 2. Enable and Start Services
sudo systemctl enable httpd
sudo systemctl start httpd
sudo systemctl start named
sudo systemctl enable firewalld
sudo systemctl start firewalld

#### 3. Configure Firewall
Allow HTTP and HTTPS traffic through the firewall.

# Add firewall rules for HTTP and HTTPS
sudo firewall-cmd --permanent --add-port=80/tcp
sudo firewall-cmd --permanent --add-port=443/tcp
sudo firewall-cmd --permanent --add-port=53/tcp
sudo firewall-cmd --permanent --add-port=53/udp
sudo firewall-cmd --permanent --add-service=http
sudo firewall-cmd --permanent --add-service=https
sudo firewall-cmd --permanent --add-service=dns

# Reload firewall to apply changes
sudo firewall-cmd --reload
sudo cp /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ssl.conf.bak
sudo cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.bak
SELinux Boolean Status
 
#### 4. Configure SELinux Boolean Status

Set SELinux booleans as needed for the Apache server. Ensure these commands reflect your needs; not all may be necessary based on your specific application.

sudo setsebool -P httpd_can_network_connect on
sudo setsebool -P httpd_execmem on
sudo setsebool -P httpd_use_nfs on
sudo setsebool -P httpd_read_user_content on
sudo setsebool -P httpd_can_network_relabel on
sudo setsebool -P httpd_enable_cgi on

#############
vi /etc/hosts
172.31.43.107  linuxcbtserv3.linuxcbt.internal   linuxcbtserv3
172.31.44.229 site1.linuxcbt.internal
172.31.35.154  linuxcbtserv2.linuxcbt.internal   linuxcbtserv2
172.31.44.229  linuxcbtserv1.linuxcbt.internal   linuxcbtserv1
##################
# Edit resolv.conf to define domain and nameservers
vi /etc/resolv.conf
search linuxcbt.internal
nameserver 172.31.44.229
nameserver 172.31.35.154
nameserver 172.31.108.225
###################
vi /etc/named/conf 

zone "linuxcbt.internal" IN {
    type master;
    file "/var/named/linuxcbt.internal";
};
###################

# Edit the DNS zone file for linuxcbt.internal
vi /var/named/linuxcbt.internal
$TTL 60
@   IN SOA  linuxcbt.internal. vdns-admin.linuxcbt.internal. (
               2017121506  ; serial
               1D          ; refresh
               1H          ; retry
               1W          ; expire
               3H )        ; minimum
           IN NS   linuxcbtserv2.linuxcbt.internal.
            IN NS   linuxcbtserv2.linuxcbt.internal.
           IN NS   linuxcbtserv3.linuxcbt.internal.
linuxcbtserv1   IN A    172.31.108.225
linuxcbtserv2   IN A    172.31.97.38
linuxcbtserv3   IN A    172.31.43.107
www    IN A        172.31.97.38
www    IN A        172.31.43.107
       IN MX  2    linuxcbtserv1.linuxcbt.internal.
linuxcbtserv1   IN A    172.31.108.225
linuxcbtserv2   IN A    172.31.97.38
linuxcbtserv3   IN A    172.31.43.107
@   IN NS   linuxcbtserv1.linuxcbt.internal.
@   IN NS   linuxcbtserv2.linuxcbt.internal.
@   IN NS   linuxcbtserv3.linuxcbt.internal.
#www    IN CNAME    linuxcbtserv2.linuxcbt.internal.
site1   IN  A   172.31.108.225
site2   IN  CNAME   site1.linuxcbt.internal.
=======================================

###check the zone configuration ## 
# Change ownership of the zone file to root.named
sudo chown named:named /var/named/linuxcbt.internal
sudo chmod 640 /var/named/linuxcbt.internal
sudo named-checkzone linuxcbt.internal /var/named/linuxcbt.internal
sudo named-checkconf /etc/named.conf
####SELinux Configuration###
sudo restorecon -v /var/named/linuxcbt.internal
sudo chcon -t named_zone_t /var/named/linuxcbt.internal
#############################
mkdir -p /var/www/site1.linuxcbt.internal
sudo chown -R apache:apache /var/www/site1.linuxcbt.internal
sudo chmod -R 755 /var/www/site1.linuxcbt.internal
# Create a simple PHP file and the line into file "<center>TESTING PHP PROCESSING</center>" into /var/www/site1.linuxcbt.internal
vi /var/www/site1.linuxcbt.internal/index.php
<?php
 "<center>TESTING PHP PROCESSING</center>";
   ?>
# Restart the named (BIND) service
Systemctl restart named.service
systemctl reload httpd.service

 *******Generate SSL key and certificate for site1.linuxcbt.internal***********
openssl genrsa -out /etc/pki/tls/private/site1.linuxcbt.internal.key 2048

**Generate Certificate Signing Request (CSR)**
openssl req -new -key /etc/pki/tls/private/site1.linuxcbt.internal.key -out /etc/pki/tls/certs/site1.linuxcbt.internal.csr

5:***Generate Self-Signed Certificate****
openssl x509 -req -days 365 -in /etc/pki/tls/certs/site1.linuxcbt.internal.csr -signkey /etc/pki/tls/private/site1.linuxcbt.internal.key -out /etc/pki/tls/certs/site1.linuxcbt.internal.crt
***Verify the Certificate***
openssl x509 -in /etc/pki/tls/certs/site1.linuxcbt.internal.crt -text -noout
***Configure Apache to Use the Certificate*****
vi /etc/httpd/conf.d/site1.ssl.linuxcbt.internal.conf
SSLCertificateFile /etc/pki/tls/certs/site1.linuxcbt.internal.crt
SSLCertificateKeyFile /etc/pki/tls/private/site1.linuxcbt.internal.key
***
sudo systemctl restart httpd
curl -k https://site1.linuxcbt.internal

6:***** /etc/httpd/conf.d/ssl.conf)****
cp /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/site1.ssl.linuxcbt.internal.conf
******
vi /etc/httpd/conf.d/site1.ssl.linuxcbt.internal.conf
Listen 443 https

<VirtualHost *:443>
    DocumentRoot "/var/www/site1.linuxcbt.internal"
    ServerName site1.linuxcbt.internal:443
    ServerAdmin admin@site1.linuxcbt.internal

    <Directory /var/www/site1.linuxcbt.internal>
        Order allow,deny
        Allow from all
    </Directory>
   
     # Error logs for SSL virtual host
    ErrorLog logs/site1.ssl_error_log
    TransferLog logs/site1.ssl_access_log

    SSLEngine on
    SSLCertificateFile /etc/pki/tls/certs/site1.linuxcbt.internal.crt
    SSLCertificateKeyFile /etc/pki/tls/private/site1.linuxcbt.internal.key

   # Security header for HTTP Strict Transport Security
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
</VirtualHost>


****
sudo apachectl configtest
sudo systemctl restart httpd

7:*** .htaccess *****

***Create/Edit the .htaccess File***
vi /var/www/site1.linuxcbt.internal/.htaccess
**1. Enable URL Rewriting***
RewriteEngine On
# Example: Redirect requests from /old-page to /new-page
RewriteRule ^old-page$ /new-page [L,R=301]

**2. Redirect HTTP to HTTPS***
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

***3. Restrict Access by IP Address***
# Allow specific IP address
Order Deny,Allow
Deny from all
Allow from 172.31.44.229 172.31.35.154

# Alternatively, to block an IP address
Deny from 192.168.1.101

**4. Custom Error Pages***
ErrorDocument 404 /custom_404.html
ErrorDocument 500 /custom_500.html

***5. Set Default Index File***
DirectoryIndex index.html index.php

**6. Disable Directory Listing**
Options -Indexes

**7. Password Protection***
First, create a .htpasswd file:
htpasswd -c /etc/.htpasswd username

Then, add the following to your .htaccess file:
AuthType Basic
AuthName "Restricted Area"
AuthUserFile /etc/.htpasswd
Require valid-user

#### Test the Configuration

Finally, test the Apache configuration to check for syntax errors:
sudo apachectl configtest

#### 20. Restart Apache Again (if needed)

If there are no syntax errors, restart the Apache service:
sudo systemctl restart httpd
# Open the PHP file in a web browser
# curl -I https://site1.linuxcbt.internal
# elinks https://site1.linuxcbt.internal


