### HTTPS (apache_ssl) ###

#linuxcbtserv2

# Query files provided by mod_ssl package
rpm -ql mod_ssl

# Query files provided by crypto-utils package
rpm -ql crypto-utils

# Query files provided by openssl package
rpm -ql openssl

# Navigate to Apache's configuration directory
cd /etc/httpd/conf.d

# List contents of the directory
ls -l

# View contents of ssl.conf file
less ssl.conf

# Check if Apache is listening on port 443
netstat -ntlp | grep 443

# Open the browser and type https://localhost
# Check Apache's HTTPS port status
netstat -ant | grep 443

# Capture network traffic on linuxcbtserv2 related to port 80 or 443
tcpdump -vv Ae tcp port 80 or 443

# SSH into 192.168.75.20
ssh 192.168.75.20

# Check location of curl command
which curl

#linuxcbtserv2

# Capture network traffic on linuxcbtserv2 related to src/dst host 192.168.75.20 and port 80 or 443
tcpdump -vv Ae src or dst host 192.168.75.20 and tcp port 80 or 443

#linuxcbtserv1

# Send HTTP request to 192.168.75.21
curl http://192.168.75.21

# Send HTTPS request to 192.168.75.21, ignoring certificate warnings
curl -k https://192.168.75.21

#linuxcbtserv2

# Capture network traffic on linuxcbtserv2 related to src/dst host 192.168.75.20 and port 80 or 443
tcpdump -vv Ae src or dst host 192.168.75.20 and tcp port 80 or 443

#linuxcbtserv1

# Send HTTPS request to 192.168.75.21, ignoring certificate warnings
curl -k https://192.168.75.21

#linuxcbtserv2

# Navigate to PKI directory
cd /etc/pki

# List contents of tls directory
ls -l tls

# List contents of private directory within tls
cd tls
ls -l private/

# Generate SSL key and certificate for linuxcbtserv2.linuxcbt.internal
genkey linuxcbtserv2.linuxcbt.internal
# Follow prompts: 
# - Next
# - 2048 (high-security, medium speed)
# - Next

# Edit ssl.conf to configure server certificate and private key paths
vi /etc/httpd/conf.d/ssl.conf
# Set:
# SSLCertificateFile /etc/pki/tls/certs/linuxcbtserv2.linuxcbt.internal.crt
# SSLCertificateKeyFile /etc/pki/tls/private/linuxcbtserv2.linuxcbt.internal.key

# Check files generated in /etc/pki/tls
cd /etc/pki/tls
ls -l
ls -l private/
ls -l certs/
ls -l rpm-gpg/
cat rpm-gpg

# Generate SSL key and certificate for site1.linuxcbt.internal
genkey site1.linuxcbt.internal
# Follow prompts:
# - Next
# - 1024 (medium-security, medium speed)
# - Next

# Copy ssl.conf to create a new virtual host configuration for site1.ssl.linuxcbt.internal
cp ssl.conf site1.ssl.linuxcbt.internal.conf
vi site1.ssl.linuxcbt.internal.conf
# Add the following lines:
# Listen 4443
# <VirtualHost *:4443>
# DocumentRoot "/var/www/site1.linuxcbt.internal"
# ServerName site1.linuxcbt.internal:4443
# <Directory /var/www/site1.linuxcbt.internal>
# Order allow,deny
# Allow from all
# </Directory>
# ErrorLog logs/site1.ssl_error_log
# TransferLog logs/site1.ssl_access_log
# SSLCertificateFile /etc/pki/tls/certs/site1.linuxcbt.internal.crt
# SSLCertificateKeyFile /etc/pki/tls/private/site1.linuxcbt.internal.key

# Check contents of /var/www/site1.linuxcbt.internal directory
ls -l /var/www/site1.linuxcbt.internal

# Check system resources using top command
top

# Edit ssl.conf to configure server certificate and private key paths for linuxcbtserv2.linuxcbt.internal
vi /etc/httpd/conf.d/ssl.conf
# Comment out or remove existing SSLCertificateFile and SSLCertificateKeyFile lines
# Set:
# SSLCertificateFile /etc/pki/tls/certs/linuxcbtserv2.linuxcbt.internal.crt
# SSLCertificateKeyFile /etc/pki/tls/private/linuxcbtserv2.linuxcbt.internal.key

# Navigate to certs directory
cd certs/

# Edit make-dummy-cert script to generate dummy SSL certificate for site1.linuxcbt.internal
vi make-dummy-cert
# Follow prompts to generate certificate for site1.linuxcbt.internal

# View contents of generated certificate
less site1.linuxcbt.internal.crt

# Concatenate contents of site1.linuxcbt.internal.crt to ../private/site1.linuxcbt.internal
cat site1.linuxcbt.internal.crt >> ../private/site1.linuxcbt.internal

# Edit ../private/site1.linuxcbt.internal to configure SSLCertificateKeyFile path
vi ../private/site1.linuxcbt.internal
# Set:
# SSLCertificateKeyFile /etc/pki/tls/private/site1.linuxcbt.internal.key
```
Here are the commands to remove the public key from `site1.linuxcbt.internal.crt`, rename the private key, configure DNS settings, and perform HTTPS testing:


# Edit site1.linuxcbt.internal.crt to remove public key at the top of the file
vi site1.linuxcbt.internal.crt

# View recent changes and verify
ls -ltr

# Check the configuration file for site1.ssl.linuxcbt.internal
less /etc/httpd/conf.d/site1.ssl.linuxcbt.internal.conf

# List contents of ../private/ directory
ls -l ../private/

# Navigate to ../private/ directory
cd ../private/

# Rename private key file from 'site1.linuxcbt.internal' to 'site1.linuxcbt.internal.key'
mv site1.linuxcbt.internal site1.linuxcbt.internal.key

# List contents of ../certs/ directory
ls -l ../certs

# Restart Apache HTTP server
systemctl restart httpd

# Check if Apache is listening on port 4443
netstat -ntlp | grep 4443

# Navigate to ../certs/ directory
cd ../certs/

# List contents of ../certs/ directory
ls -ltr

# Perform DNS lookup for site1.linuxcbt.internal
dig site1.linuxcbt.internal

# View contents of /etc/resolv.conf
cat /etc/resolv.conf

# Edit /etc/resolv.conf to set nameserver to 192.168.75.21
vi /etc/resolv.conf
nameserver 192.168.75.21

# Perform DNS lookup for site1.linuxcbt.internal after setting nameserver
dig site1.linuxcbt.internal

# Edit /var/named/linuxcbt.internal to add DNS entry for site1.linuxcbt.internal
vi /var/named/linuxcbt.internal
# Add line: site1 IN A 192.168.75.21

# Restart named service
systemctl restart named.services

# Perform DNS lookup for site1.linuxcbt.internal to verify resolution
dig site1.linuxcbt.internal

# Open the browser and navigate to https://site1.linuxcbt.internal:4443

# Edit make-dummy-cert to generate dummy certificate for linuxcbtserv2.linuxcbt.internal
vi make-dummy-cert
echo linuxcbtserv2.linuxcbt.internal
echo root@linuxcbtserv2.linuxcbt.internal
./make-dummy-cert linuxcbtserv2.linuxcbt.internal

# List contents of current directory
ls -l

# Edit /etc/httpd/conf.d/ssl.conf to set server certificate and private key for linuxcbtserv2.linuxcbt.internal
vi /etc/httpd/conf.d/ssl.conf
# Set:
# SSLCertificateFile /etc/pki/tls/certs/linuxcbtserv2.linuxcbt.internal.crt
# SSLCertificateKeyFile /etc/pki/tls/private/linuxcbtserv2.linuxcbt.internal.key

# Restart Apache HTTP server
systemctl restart httpd

# List contents with recent modifications
ls -ltr

# Append linuxcbtserv2.linuxcbt.internal to linuxcbtserv2.linuxcbt.internal.crt
cat linuxcbtserv2.linuxcbt.internal >> linuxcbtserv2.linuxcbt.internal.crt

# Rename linuxcbtserv2.linuxcbt.internal to linuxcbtserv2.linuxcbt.internal.crt
mv linuxcbtserv2.linuxcbt.internal linuxcbtserv2.linuxcbt.internal.crt

# Check Apache's HTTP server status on port 443
netstat -antp | grep httpd

# List current directory
ls

# View contents of site1.linuxcbt.internal.crt for verification
less site1.linuxcbt.internal.crt

# List contents of ../private/ directory
ls -ltr ../private/

# View contents of linuxcbtserv2.linuxcbt.internal.key
less linuxcbtserv2.linuxcbt.internal.key

# Test HTTPS connection to site1.linuxcbt.internal on port 4443 using curl
curl -k https://site1.linuxcbt.internal:4443

# Test HTTPS connection to linuxcbtserv2.linuxcbt.internal using curl
curl -k https://linuxcbtserv2.linuxcbt.internal

#linuxcbtservbuild 192.168.75.100

# View contents of /etc/resolv.conf
cat /etc/resolv.conf

# Edit /etc/resolv.conf to set nameserver to 192.168.75.21
vi /etc/resolv.conf
nameserver 192.168.75.21

# Test HTTPS connection to linuxcbtserv2.linuxcbt.internal on port 4443 using curl
curl -k https://linuxcbtserv2.linuxcbt.internal:4443

# Test HTTPS connection to linuxcbtserv2.linuxcbt.internal using curl
curl -k https://linuxcbtserv2.linuxcbt.internal
```
